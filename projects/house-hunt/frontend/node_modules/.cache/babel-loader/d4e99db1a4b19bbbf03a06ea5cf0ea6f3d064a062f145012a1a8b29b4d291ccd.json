{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Houses API\nexport const housesAPI = {\n  getAllHouses: params => api.get('/houses', {\n    params\n  }),\n  getHouse: id => api.get(`/houses/${id}`),\n  getMyListings: () => api.get('/houses/my-listings'),\n  createHouse: houseData => api.post('/houses', houseData),\n  updateHouse: (id, houseData) => api.put(`/houses/${id}`, houseData),\n  deleteHouse: id => api.delete(`/houses/${id}`),\n  getAvailableLocations: () => api.get('/houses/locations/available')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getCurrentUser","get","housesAPI","getAllHouses","params","getHouse","id","getMyListings","createHouse","houseData","updateHouse","put","deleteHouse","delete","getAvailableLocations"],"sources":["C:/Users/malla/Desktop/House-Hunt Project/house-hunt/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle response errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n};\r\n\r\n// Houses API\r\nexport const housesAPI = {\r\n  getAllHouses: (params) => api.get('/houses', { params }),\r\n  getHouse: (id) => api.get(`/houses/${id}`),\r\n  getMyListings: () => api.get('/houses/my-listings'),\r\n  createHouse: (houseData) => api.post('/houses', houseData),\r\n  updateHouse: (id, houseData) => api.put(`/houses/${id}`, houseData),\r\n  deleteHouse: (id) => api.delete(`/houses/${id}`),\r\n  getAvailableLocations: () => api.get('/houses/locations/available'),\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,MAAM;;AAEvD;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKxB,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC5DE,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;EAC5DC,cAAc,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,UAAU;AAC1C,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,YAAY,EAAGC,MAAM,IAAKhC,GAAG,CAAC6B,GAAG,CAAC,SAAS,EAAE;IAAEG;EAAO,CAAC,CAAC;EACxDC,QAAQ,EAAGC,EAAE,IAAKlC,GAAG,CAAC6B,GAAG,CAAC,WAAWK,EAAE,EAAE,CAAC;EAC1CC,aAAa,EAAEA,CAAA,KAAMnC,GAAG,CAAC6B,GAAG,CAAC,qBAAqB,CAAC;EACnDO,WAAW,EAAGC,SAAS,IAAKrC,GAAG,CAACyB,IAAI,CAAC,SAAS,EAAEY,SAAS,CAAC;EAC1DC,WAAW,EAAEA,CAACJ,EAAE,EAAEG,SAAS,KAAKrC,GAAG,CAACuC,GAAG,CAAC,WAAWL,EAAE,EAAE,EAAEG,SAAS,CAAC;EACnEG,WAAW,EAAGN,EAAE,IAAKlC,GAAG,CAACyC,MAAM,CAAC,WAAWP,EAAE,EAAE,CAAC;EAChDQ,qBAAqB,EAAEA,CAAA,KAAM1C,GAAG,CAAC6B,GAAG,CAAC,6BAA6B;AACpE,CAAC;AAED,eAAe7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}