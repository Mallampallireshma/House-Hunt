{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malla\\\\Desktop\\\\House-Hunt Project\\\\house-hunt\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'AUTH_ERROR':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on component mount\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data.user,\n              token\n            }\n          });\n        } catch (error) {\n          console.error('Error loading user:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({\n            type: 'AUTH_ERROR'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","isAuthenticated","user","payload","token","loading","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","loadUser","response","getCurrentUser","data","error","console","removeItem","login","email","password","setItem","JSON","stringify","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/malla/Desktop/House-Hunt Project/house-hunt/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Auth reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case 'AUTH_ERROR':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: true,\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Load user on component mount\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await authAPI.getCurrentUser();\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: {\r\n              user: response.data.user,\r\n              token,\r\n            },\r\n          });\r\n        } catch (error) {\r\n          console.error('Error loading user:', error);\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          dispatch({ type: 'AUTH_ERROR' });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await authAPI.login({ email, password });\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token },\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_ERROR' });\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await authAPI.register(userData);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token },\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_ERROR' });\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Registration failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}